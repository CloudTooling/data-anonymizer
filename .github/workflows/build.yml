name: Build
on:
  pull_request:
  merge_group:
  push:
    branches:
      - develop
    tags:
      - '*'
jobs:
  Build:
    name: Build and Test on ${{ matrix.python }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-latest', 'ubuntu-latest']
        python: ['3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        id: install-deps
        run: |
          pip3 install -r requirements.txt
      - name: Run tests
        id: run-tests
        run: |
          .bin/tests.sh
  Container:
    name: Build Container Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Write version vars
        id: version-vars
        run: |
          BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
          BRANCH=${GITHUB_REF_NAME#v}
          APP_VERSION=$(cat config.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')
          echo Version: $APP_VERSION
          echo "VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: cloudtooling/data-anonymizer
          tags: 'next ${{env.APP_VERSION}}_rc'
          containerfiles: |
            ./Dockerfile
          build-args: |
            BUILD_DATE=${{env.BUILD_DATE}}
            APP_VERSION=${{env.APP_VERSION}}
      - name: Run tests in container
        id: run-tests
        run: |
          docker run -v $(pwd):/build --entrypoint "/build/.bin/tests.sh"  cloudtooling/data-anonymizer:next
      - name: Push To Docker Hub
        id: push-to-dockerhub-preview
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: 'next ${{env.APP_VERSION}}_rc'
          registry: registry.hub.docker.com
          username: ${{ secrets.DOCKER_HUB_USER}}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        if: github.ref == 'refs/heads/develop'
  Build-results:
    name: Build results
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - Build
      - Container
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{

               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
            }}
